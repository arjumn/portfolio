@mixin opacity($value) {
  opacity: $value;
  $opacity-ie: $value * 100;
  filter: alpha(opacity=$opacity-ie); //IE8
}

@mixin inline-block {
	display: -moz-inline-stack;	// ff 2
	display: inline-block;
	zoom:1; *display: inline;
}

@mixin border-radius($radius) {
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  -ms-border-radius: $radius;
  border-radius: $radius;
}

@mixin box-shadow($shadow) {
  -webkit-box-shadow: $shadow;
  -moz-box-shadow: $shadow;
  -o-box-shadow: $shadow;
  box-shadow: $shadow;
}

@mixin transition($value) {
  -moz-transition: $value;
  -o-transition: $value;
  -webkit-transition: $value;
  transition: $value;
}

@mixin transition-delay($delay...) {
  -webkit-transition-delay: $delay;
  -moz-transition-delay: $delay;
  transition-delay: $delay;
}

@mixin transition-property($property...) {
  -webkit-transition-property: $property;
  -moz-transition-property: $property;
  transition-property: $property;
}

@mixin transition-duration($duration...) {
  -webkit-transition-duration: $duration;
  -moz-transition-duration: $duration;
  transition-duration: $duration;
}

@mixin box-sizing() {
	-webkit-box-sizing: border-box;
	-moz-box-sizing: border-box;
	box-sizing: border-box;
}

@mixin putOnCircle(
          $nb-items, //Number of items
          $circle-size, //Parent size
          $item-size, //Item size
          $class-for-IE: false //Base class name, false means use of pseudo-selectors
       ) {
  $half-item:     $item-size / 2;
  $half-parent: $circle-size / 2;

  position: relative;               /* [1] */
  width:  $circle-size;
  height: $circle-size;
  padding: 0;
  border-radius: 50%;
  list-style: none;                 /* [2] */
  @include box-sizing();            /* [3] */

  > * {                             /* [4] */
    display: block;
    position: absolute;
    top:  50%;
    left: 50%;
    width:  $item-size;
    margin: -$half-item;

    $angle: 360 / $nb-items;
    $rot: 0;
    @for $i from 1 to $nb-items+1 {
      &:nth-of-type(#{$i}) {
      transform:
      			rotate(#{$rot}deg)       /* Rotate the axis */
      			translate($half-parent) /* Move the item from the center */
      			rotate(-#{$rot}deg);     /* Rotate the item back to its default position */
      }
      $rot: $rot + $angle;
    }

    span {
      @include box-sizing();
      width: $item-size;
    }
  }
}
